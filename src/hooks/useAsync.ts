import {useEffect, useState} from 'react';

// Generated by Github Copilot
export default function useAsync<T>(
    asyncFunction: () => Promise<T>,
    deps: any[] = [],
    initialData: T,
) {
    const [data, setData] = useState<T>(initialData);
    const [isLoading, setIsLoading] = useState<boolean>(false);
    const [error, setError] = useState<Error | null>(null);

    useEffect(() => {
        const doAsync = async () => {
            setIsLoading(true);

            try {
                const result = await asyncFunction();
                setData(result);
            } catch (err: any) {
                setError(err as Error);
            } finally {
                setIsLoading(false);
            }
        };
        doAsync();
    }, deps);

    return {data, isLoading, error};
}